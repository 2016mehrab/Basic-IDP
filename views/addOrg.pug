doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet", href="/addOrg.css")

    title Add Organization
  body
    .text-center
      h1 Organization
      button(onclick="getAll()") Get All Org
      span ||
      input#search-input(type="text")
      button(onclick="search()") Search
      #show-car
    .text-center.form-container
      h3 Add Organization
      form#createForm(action="", name="createCar")
        div
          label(for="") Organization
          input(name="orgName")
        div
          label(for="") Domain
          input(name="domain")
        div
          button(type="submit") Create

    //- Commented out update owner form
    // .text-center.form-container
    //   h3 Update Owner
    //   form#updateForm(action="", name="updateOwner")
    //     div
    //       label(for="") Car ID/Key
    //       input(name="key")
    //     div
    //       label(for="") New Owner
    //       input(name="owner")
    //     div
    //       button(type="submit") Update

  script.
    // CREATING NEW CAR
    const createForm = document.getElementById('createForm');

    // THIS IS AN EVENT LISTENER WHICH WILL RUN WHEN WE CLICK THE CREATE BUTTON
    createForm.addEventListener("submit", function(event) {
        event.preventDefault();
        const formData = new FormData(createForm);
        const did = sessionStorage.getItem('did');
        formData.append('key', did); // Append did to form data
        const bodyParam = new URLSearchParams( formData )


        //CALLING CREATE API
        fetch('http://localhost:3000/create', {
            method: 'POST',
            body: bodyParam
        })
        .then(res => {
            return res.json()
        })
        .then( parsedRes => {
            alert(parsedRes.message)
        })
        .catch(err => {
            console.error({ err })
        })
    });



    // UPDATE: CHANGING CAR OWNER
    // const updateForm = document.getElementById('updateForm')

    // THIS IS AN EVENT LISTENER WHICH WILL RUN WHEN WE CLICK THE UPDATE BUTTON
    // updateForm.addEventListener("submit", function(event) {
    //     event.preventDefault()
    //     const bodyParam = new URLSearchParams( new FormData(updateForm) )
        
    //         //CALLING UPDATE API
    //         fetch('http://localhost:3000/update', {
    //             method: 'POST',
    //             body: bodyParam
    //         })
    //         .then(res => {
    //             if(res.status !== 200){
    //                 alert('Unable to update')
    //                 return
    //             }
    //             return res.json()
    //         })
    //         .then( parsedRes => {
    //             alert( parsedRes.message )
    //             getAll()
    //         })
    //         .catch(err => {
    //             alert(err.message)
    //             console.error({ err })
    //         })
    // });


    //SEARCH DATA
    function search(){
        // extracting value from input field
        const value = document.getElementById('search-input').value
        getAll( value )
    }
    
    // GETTING ALL CAR DATA FROM API
    function getAll( query ){
        const api = query ? 'http://localhost:3000/get-car?key=' + query :  'http://localhost:3000/get-car'
        fetch(api)
            .then( res => {
                return res.json();
            })
        .then( parsedRes => {
            let carMarkup = ''; 
            parsedRes.forEach( item => {
                carMarkup += `
                    <div class="car-item">
                        <p> DID: ${ item.Key }</p>
                        <p> Organization: ${ item.Record.orgName }</p>
                        <p> Domain: ${ item.Record.domain }</p>
                    </div>
                `;
            });
            // getting the html container with id=show-car
            const carContainer = document.getElementById('show-car');
            //CLEANING EXISTING CAR HTML NODE/ELEMENT
            while (carContainer.hasChildNodes()) {
                carContainer.removeChild(carContainer.firstChild);
            }

                // Adding new car data markup
            // Adding new car data markup
            carContainer.insertAdjacentHTML('beforeend', carMarkup);
        })
        .catch(err => {
            alert('Operation failed');
            console.error({ err });
            })
    }

